<ContentView xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:f="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:c="clr-namespace:TestApp.Controls;assembly=TestApp"
             xmlns:e="clr-namespace:TestApp.Effects;assembly=TestApp"
             xmlns:t="clr-namespace:FFImageLoading.Transformations;assembly=FFImageLoading.Transformations"
             xmlns:r="clr-namespace:Sharpnado.Presentation.Forms.RenderedViews;assembly=Sharpnado.Presentation.Forms"
             xmlns:h="clr-namespace:Sharpnado.Presentation.Forms.Effects;assembly=Sharpnado.Presentation.Forms"
             x:Class="TestApp.View.RegistrationSteps.PhotosView" x:Name="ThisView">

    <Grid x:Name="MainGrid" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Label Grid.Row="0" x:Name="PhotosLabel" Text="Photos" Margin="0,10,0,5"/>
        <r:HorizontalListView Grid.Row="1" x:Name="MainListView" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" ColumnCount="3"
                              CollectionPadding="2" ItemSpacing="2" EnableDragAndDrop="True" ItemHeight="180" ItemsSource="{Binding Items, Mode=TwoWay}" ListLayout="Grid" 
                              DragAndDropEndedCommand="{Binding ReorderedCommand}" ChildrenReordered="MainListView_ChildrenReordered">
            <r:HorizontalListView.ItemTemplate>
                <DataTemplate>
                    <r:DraggableViewCell x:Name="DraggableViewCell">
                        <ContentView>
                            <Grid Margin="5" h:TapCommandEffect.Tap="{Binding BindingContext.SelectPhotoCommand, Source={x:Reference ThisView}}"
                                  h:TapCommandEffect.TapParameter="{Binding .}" h:ViewEffect.TouchFeedbackColor="{DynamicResource Color.Pictures.Border.Pressed}">
                                <c:ExtendedFrame CornerRadius="10" StrokeDashLength="20" StrokeDashGap="9" StrokeThickness="10" 
                                                 BorderColor="{DynamicResource Color.Pictures.Border}" IsClippedToBounds="True">
                                    <c:ExtendedFrame.Triggers>
                                        <DataTrigger Binding="{Binding Source={x:Reference DraggableViewCell}, Path=IsDragAndDropping}" TargetType="c:ExtendedFrame" Value="True">
                                            <Setter Property="Elevation" Value="8"/>
                                        </DataTrigger>
                                    </c:ExtendedFrame.Triggers>

                                    <f:CachedImage Aspect="AspectFit" DownsampleToViewSize="True" Source="{Binding ImageSource}" BitmapOptimizations="True" CacheType="Disk">
                                        <f:CachedImage.Transformations>
                                            <t:RoundedTransformation Radius="10"/>
                                        </f:CachedImage.Transformations>
                                    </f:CachedImage>
                                </c:ExtendedFrame>

                                <Label Text="{Binding Position, Mode=OneWay}" FontSize="20" Margin="8" VerticalOptions="Start" HorizontalOptions="Start">
                                    <Label.Effects>
                                        <e:ShadowEffect x:Name="MainEffect" Color="#404040" Opacity="0.9" Radius="10" DistanceX="5" DistanceY="5"/>
                                    </Label.Effects>
                                </Label>

                                <Button BackgroundColor="{DynamicResource Color.Button.Background}" BorderWidth="0" BorderColor="{DynamicResource Color.Button.Background.Main}"
                                        HeightRequest="38" WidthRequest="38" CornerRadius="30" VerticalOptions="End" HorizontalOptions="End" Margin="-5"
                                        Command="{Binding BindingContext.RemovePhotoCommand, Source={x:Reference ThisView}}" CommandParameter="{Binding .}"
                                        IsVisible="{Binding Path=HasImage}">
                                    <Button.ImageSource>
                                        <FontImageSource Color="{DynamicResource Color.Button.Foreground}" FontFamily="{StaticResource Font.Glyph}" Glyph="{StaticResource Icon.Close}" Size="26"/>
                                    </Button.ImageSource>
                                </Button>
                            </Grid>
                        </ContentView>
                    </r:DraggableViewCell>
                </DataTemplate>
            </r:HorizontalListView.ItemTemplate>
        </r:HorizontalListView>
    </Grid>
</ContentView>